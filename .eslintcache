[{"/home/tonyhaddad/Desktop/SecondProject/frontend/src/index.js":"1","/home/tonyhaddad/Desktop/SecondProject/frontend/src/App.js":"2","/home/tonyhaddad/Desktop/SecondProject/frontend/src/reportWebVitals.js":"3","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Login.js":"4","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Sidenav.js":"5","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Admins.js":"6","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Teams.js":"7","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Projects.js":"8","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Reports.js":"9","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Employees.js":"10","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Modal.js":"11","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Pagination.js":"12"},{"size":570,"mtime":1609756128266,"results":"13","hashOfConfig":"14"},{"size":1472,"mtime":1609761780035,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609002025802,"results":"16","hashOfConfig":"14"},{"size":4168,"mtime":1609752981785,"results":"17","hashOfConfig":"14"},{"size":7012,"mtime":1609966615963,"results":"18","hashOfConfig":"14"},{"size":22011,"mtime":1609938857685,"results":"19","hashOfConfig":"14"},{"size":196,"mtime":1609690382391,"results":"20","hashOfConfig":"14"},{"size":205,"mtime":1609690401671,"results":"21","hashOfConfig":"14"},{"size":200,"mtime":1609690389083,"results":"22","hashOfConfig":"14"},{"size":204,"mtime":1609690392211,"results":"23","hashOfConfig":"14"},{"size":5993,"mtime":1609767915132,"results":"24","hashOfConfig":"14"},{"size":695,"mtime":1609887345512,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ze9xgs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/tonyhaddad/Desktop/SecondProject/frontend/src/index.js",[],["53","54"],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/App.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/reportWebVitals.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Login.js",["55"],"import React from 'react'\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Axios from 'axios';\nimport \"../App.css\"; \n\n\nconst Login = () => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n  const [authErr, setAuthErr] = useState('');\n  const [passErr, setPassErr] = useState('');\n  const [usernameErr, setUsernameErr] = useState('');\n  const [isPassShown , setIsPassShown] = useState(false);\n\nconst toggleVisibility = () => {\n  setIsPassShown(!isPassShown);\n}\n\n\n\n  const HandleLogin = async (e) => {\n    e.preventDefault();\n    if (!username && !password) {\n      setUsernameErr('Username is invalid!')\n      setPassErr('Password is invalid!');\n      setAuthErr('');\n    } else if (username && !password) {\n      setUsernameErr('');\n      setPassErr('Password is invalid');\n      setAuthErr('');\n    } else if (!username && password) {\n      setPassErr('');\n      setUsernameErr('Username is invalid!');\n      setAuthErr('');\n    } else if (password.length < 6) {\n      setPassErr('Password must containt at least 6 characters!')\n      setAuthErr('');\n      setUsernameErr('');\n    } else if (username.length < 5) {\n      setUsernameErr('Username must containt at least 5 characters!')\n      setAuthErr('');\n      setPassErr('');\n    } else if (username.length < 5 && password.length < 6) {\n      setUsernameErr('Username must containt at least 5 characters!')\n      setPassErr('Password must containt at least 6 characters!')\n      setAuthErr('');\n    } else {\n      try {\n        await Axios.post(\"http://localhost:8000/api/login\", {\n          username: username,\n          password: password,\n\n        }).then((response) => {\n          setAuthErr(response.data.error + \" Username or Password\");\n          setUsernameErr(\"\");\n          setPassErr(\"\");\n          setToken(response.data.access_token)\n          {\n\n            localStorage.setItem('image', response.data.user.image);\n            localStorage.setItem('id', response.data.user.id);\n            localStorage.setItem('username', response.data.user.username);\n            response &&\n              response.data &&\n              response.data.access_token &&\n              localStorage.setItem(\"token\", response.data.access_token);\n\n          }\n\n\n\n        });\n      } catch (err) { console.log(err) };\n\n\n    };\n  }\n\n\n  return (\n\n    <div className=\"login\">\n     \n   <div className=\"parallax\">\n     <div className=\"login-inner\">\n          <h1 className=\"login-title\">This is Our Great Company system.</h1>\n   <h3 className=\"login-title2\">Entreprise Resource planning.</h3>\n      <form className=\"login-form\" style={{ width: \"40%\", margin: \"8% auto\" }}>\n        <div className=\"form-group\" >\n          <label className=\"login-label\" htmlFor=\"exampleInputEmail1\">Username</label>\n          {usernameErr ? <div className=\"alert alert-danger\">{usernameErr}</div> : \"\"}\n          {authErr ? <div className=\"alert alert-danger\">{authErr}</div> : \"\"}\n          <input style={{height:\"40px\"}} type=\"text\" value={username} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Username\" onChange={(e) => {\n            setUsername(e.target.value);\n          }} />\n\n\n        </div>\n        <div className=\"form-group\">\n          <label className=\"login-label\" htmlFor=\"exampleInputPassword1\">Password</label>\n          {passErr ? <div className=\"alert alert-danger\">{passErr}</div> : \"\"}\n         <div className=\"eye\">\n          <input style={{height:\"40px\"}} type={(isPassShown)? \"text\" : \"password\"} value={password} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={(e) => {\n            setPassword(e.target.value);\n          }} /> <i id=\"fa1\" className=\"fa fa-eye password-icon\" onClick={toggleVisibility} />\n       </div>\n        </div>\n\n\n        <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" onClick={HandleLogin}>Submit</button>\n      </form>\n      {(token) ? <Redirect exact to=\"/Admins\" /> : (<Redirect exact to=\"/\" />)}\n      </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Login;\n","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Sidenav.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Admins.js",["56","57"],"import Axios from 'axios';\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Sidenav from './Sidenav';\nimport Pagination from './Pagination';\n\n\n\n\nconst Admins = () => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [image, setImage] = useState('');\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [filteredData, setFilteredData] = useState([]);\n    const [newfirstName, setNewfirstName] = useState('');\n    const [newLastName, setNewLastName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const [newImage, setNewImage] = useState('');\n    const [users, setUsers] = useState([]);\n    const [render, setRender] = useState();\n    const [lastnameErr, setLastnameErr] = useState('');\n    const [emailErr, setEmailErr] = useState('');\n    const [firstnameErr, setFirstnameErr] = useState('');\n    const [passErr, setPassErr] = useState('');\n    const [usernameErr, setUsernameErr] = useState('');\n    const [success, setSuccess] = useState('');\n    const [successUpdate, setSuccessUpdate] = useState('');\n    const [imageErr, setImageErr] = useState('');\n    const [newlastnameErr, setnewLastnameErr] = useState('');\n    const [newemailErr, setnewEmailErr] = useState('');\n    const [newfirstnameErr, setnewFirstnameErr] = useState('');\n    const [newimageErr, setnewImageErr] = useState('');\n    const [infoErr, setInfoErr] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage, setPostsPerPage] = useState(10);\n    const [progress, setProgess] = useState(0);\n    const [sortBy, setSortBy] = useState(false);\n\n\n    const toggleDisplay = () => {\n        setSortBy(!sortBy);\n    }\n\n\n\n    const numOfAdmins = users.length;\n\n    useEffect(() => {\n        Axios.get('http://localhost:8000/api/users', {\n            headers: {\n                'content-type': 'multipart/form-data',\n                'Authorization': \"Bearer \" + localStorage.getItem('token')\n            }\n        }).then((response) => {\n            setUsers(response.data);\n            setLoading(false);\n        })\n    }, [render])\n\n    useEffect(() => {\n        setFilteredData(\n            users.filter((user) =>\n                user.firstname.toLowerCase().includes(search.toLowerCase()) || user.lastname.toLowerCase().includes(search.toLowerCase()) || user.email.toLowerCase().includes(search.toLowerCase())\n            ));\n    }, [search, users, render]);\n\n    useEffect(() => {\n        localStorage.getItem('image');\n        console.log(localStorage.getItem('image'))\n    }, [])\n\n    useEffect(() => {\n        localStorage.getItem('id');\n        console.log(localStorage.getItem('id'))\n\n    }, [])\n\n    useEffect(() => {\n        localStorage.getItem('username');\n        console.log(localStorage.getItem('username'))\n\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    // console.log(\"indexOfLastPost: \", indexOfLastPost);\n\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    // console.log(\"indexOfFirstPost: \", indexOfFirstPost);\n\n    const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => {\n        setCurrentPage(pageNumber);\n    };\n    console.log(\"currentPosts: \", currentPosts);\n\n    const handleAdd = async (e) => {\n        e.preventDefault();\n        setProgess(0)\n        const data = new FormData();\n        data.append('firstname', firstName)\n        data.append('lastname', lastName)\n        data.append('email', email)\n        data.append('image', image);\n        data.append('username', userName)\n        data.append('password', password)\n        try {\n            await Axios.post('http://localhost:8000/api/register', data, {\n                headers: {\n                    'content-type': 'multipart/form-data',\n                    'Authorization': \"Bearer \" + localStorage.getItem('token')\n                },\n                onUploadProgress: (ProgressEvent) => {\n                    let progress = Math.round(\n                        ProgressEvent.loaded / ProgressEvent.total * 100) + '%';\n                    setProgess(progress);\n                }\n            }).then((response) => {\n                console.log(response.data);\n                localStorage.getItem('token');\n                setLoading(false);\n                setUsers([\n                    ...users, {\n                        firstname: firstName,\n                        lastname: lastName,\n                        email: email,\n                        image: image,\n                        username: userName,\n                        password: password\n                    }])\n                setSuccess('Data has been inserted');\n                setFirstnameErr('');\n                setLastnameErr('');\n                setEmailErr('');\n                setUsernameErr('');\n                setPassErr('');\n                setImageErr('');\n\n\n            })\n        } catch (error) {\n\n            if (error.response.data.error.firstname && error.response.data.error.lastname && error.response.data.error.email && error.response.data.error.username && error.response.data.error.password && error.response.data.error.image) {\n                setFirstnameErr(error.response.data.error.firstname);\n                setLastnameErr(error.response.data.error.lastname);\n                setEmailErr(error.response.data.error.email);\n                setUsernameErr(error.response.data.error.username);\n                setPassErr(error.response.data.error.password);\n                setImageErr(error.response.data.error.image);\n                setProgess(0);\n            } else if (!error.response.data.error.firstname) {\n                setFirstnameErr(\"\");\n                setProgess(0);\n            } else if (error.response.data.error.firstname || error.response.data.error.lastname || error.response.data.error.email || error.response.data.error.username || error.response.data.error.password || error.response.data.error.image) {\n                setInfoErr('Your information are not Valid!');\n                setProgess(0);\n            } else if (!error.response.data.error.lastname) {\n                setLastnameErr(\"\");\n                setProgess(0);\n            } else if (!error.response.data.error.email) {\n                setEmailErr(\"\");\n                setProgess(0);\n            } else if (!error.response.data.error.username) {\n                setUsernameErr(\"\");\n                setProgess(0);\n            } else if (!error.response.data.error.password) {\n                setPassErr(\"\");\n            } else if (!error.response.data.error.image) {\n                setImageErr('');\n                setProgess(0);\n            } else if (error.response.data.error.firstname) {\n                setFirstnameErr(error.response.data.error.firstname);\n                setProgess(0);\n            } else if (error.response.data.error.lastname) {\n                setLastnameErr(error.response.data.error.lastname);\n                setProgess(0);\n            } else if (error.response.data.error.email) {\n                setEmailErr(error.response.data.error.email);\n                setProgess(0);\n            } else if (error.response.data.error.username) {\n                setUsernameErr(error.response.data.error.username);\n                setProgess(0);\n            } else if (error.response.data.error.password) {\n                setPassErr(error.response.data.error.password);\n                setProgess(0);\n            } else if (error.response.data.error.image) {\n                setImageErr(error.response.data.error.image);\n                setProgess(0);\n            }\n        }\n    }\n    if (loading) {\n        return <p>Loading data...</p>;\n    }\n    const deleteItem = async (id) => {\n        try {\n            await Axios.delete(`http://localhost:8000/api/users/${id} `, {\n                headers: {\n                    'Accept': 'application/json',\n                    'content-type': 'multipart/form-data',\n                    'Authorization': \"Bearer \" + localStorage.getItem('token')\n                }\n            }\n            ).then((data) => {\n                if (data.status === 200) {\n                    console.log(data)\n                    // alert(\"Deleted!\");\n                    const newData = users.filter((item) => item.id !== id);\n                    setUsers(newData);\n                }\n            })\n        } catch (err) { console.log(err) }\n    }\n\n    const updateInfo = async (id) => {\n        if (!newfirstName && !newLastName && !newEmail && !newImage) {\n            setnewFirstnameErr('Firstname is Required!');\n            setnewLastnameErr('Lastname is Required!');\n            setnewEmailErr('Email is Invalid!');\n            setnewImageErr('Image is required!')\n        } else if (newfirstName && !newLastName && !newEmail && !newImage) {\n            setnewFirstnameErr('');\n            setnewLastnameErr('Lastname is Required!');\n            setnewEmailErr('Email is Invalid!');\n            setnewImageErr('Image is required!')\n        } else if (!newfirstName && newLastName && !newEmail && !newImage) {\n            setnewFirstnameErr('Firstname is Required!');\n            setnewLastnameErr('');\n            setnewEmailErr('Email is Invalid!');\n            setnewImageErr('Image is required!')\n        } else if (!newfirstName && !newLastName && newEmail && !newImage) {\n            setnewFirstnameErr('Firstname is Required!');\n            setnewLastnameErr('Lastname is Required!');\n            setnewEmailErr('');\n            setnewImageErr('Image is required!')\n        } else if (!newfirstName && newLastName && !newEmail && newImage) {\n            setnewFirstnameErr('Firstname is Required!');\n            setnewLastnameErr('Lastname is Required!');\n            setnewEmailErr('Email is Invalid!');\n            setnewImageErr('')\n        } else if (!newEmail.includes('@') && !newEmail.includes('.com')) {\n            setnewEmailErr('Please enter a valid email address');\n        } else {\n            const data = new FormData();\n            data.append('firstname', newfirstName)\n            data.append('lastname', newLastName)\n            data.append('email', newEmail)\n            data.append('image', newImage)\n            try {\n                await Axios.post(`http://localhost:8000/api/users/${id}?_method=PUT `, data, {\n                    headers: {\n                        'content-type': 'multipart/form-data',\n                        'Authorization': \"Bearer \" + localStorage.getItem('token')\n                    }\n                }).then((response) => {\n                    console.log(response);\n                    setRender(!render);\n                    setSuccessUpdate('Data has been updated');\n                    setnewFirstnameErr('');\n                    setnewLastnameErr('');\n                    setnewEmailErr('');\n                    setnewImageErr('');\n                })\n            } catch (err) { console.log(err) }\n        }\n\n        if (!localStorage.getItem('token')) {\n            return <Redirect to=\"/\" />;\n        }\n\n\n    };\n    return (\n        <div className=\"adminss\">\n            <Sidenav />\n            <div className=\"Header-nav\">\n                <form className=\"search\">\n                    <div className=\"search__wrapper\">\n                        <input value={search} placeholder=\"Find Admins...\" type=\"text\" name=\"\" className=\"search__field\" onChange={(e) => { setSearch(e.target.value) }} />\n                        <button type=\"submit\" className=\"fa fa-search search__icon\"></button>\n                    </div>\n                </form>\n                {/* {(loggedOut) ? (<Redirect exact to=\"/\" />) : \"\"} */}\n            </div>\n\n            <nav aria-label=\"breadcrumb\">\n                <ol style={{ backgroundColor: \"#a6a3bb\" }} className=\"breadcrumb\">\n                    <li style={{ color: \"#621840\" }} className=\"breadcrumb-item active\" aria-current=\"page\">Admins</li>\n                    <li style={{ opacity: \"0.4\" }} className=\"breadcrumb-item\">Employees</li>\n                    <li style={{ opacity: \"0.4\" }} className=\"breadcrumb-item\">Teams</li>\n                    <li style={{ opacity: \"0.4\" }} className=\"breadcrumb-item\">Projects</li>\n                    <li style={{ opacity: \"0.4\" }} className=\"breadcrumb-item\">Reports</li>\n\n                </ol>\n            </nav>\n\n            <div className=\"container\">\n                <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n                    <button style={{ marginLeft: \"10%\", marginTop: \"3%\" }} type=\"button\" id=\"change1\" className=\"btn btn-info btn-md\" data-toggle=\"modal\" data-target=\"#myModal\">Add Admin</button>\n                    <div id=\"toggle-switch\" style={{ display: \"flex\", fontSize: \"15px\", width: \"20%\", justifyContent: \"space-between\", marginTop: \"4%\", marginRight: \"10%\" }}>\n                        <p>sort by list</p>\n                        <label class=\"switch\">\n                            <input id=\"toggle\" type=\"checkbox\" onClick={toggleDisplay} />\n                            <span className=\"slider round\"></span>\n                        </label><p>sort by grid</p>\n                    </div>\n                </div>\n                <h1 id=\"admin-num\" style={{ color: \"#621840\", marginLeft: \"10%\" }}>Number of <span style={{ color: \"red\" }}>admins</span> recruited &nbsp;<span style={{ fontSize: \"25px\" }} className=\"badge badge-secondary\">{numOfAdmins}</span></h1>\n                {successUpdate ? <div style={{ width: \"80%\", margin: \"0 auto\" }} className=\"alert alert-success\">{successUpdate}</div> : \"\"}\n                <div className=\"admins\" style={(sortBy === true) ? { display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", width: \"80%\", textAlign: \"center\" } : { display: \"flex\", flexDirection: \"column\" }} >\n                    {(filteredData.length === 0) ? <div style={{ textAlign: \"center\", color: \"red\", fontSize: \"20px\", fontWeight: \"bold\" }}>No result found!</div> : (currentPosts.map((arr) => {\n                        return <div className=\"parent\" style={(sortBy === true) ? { display: \"grid\", width: \"100%\", height: \"55vh\", gridColumnGap: \"5%\" } : { display: \"flex\", flexDirection: \"row\", height: \"0\", padding: \"1% 2% 5% 10%\", justifyContent: \"space-evenly\" }} key={arr.id}>\n                            <img style={(sortBy === true) ? { marginLeft: \"23%\", width: \"116px\", height: \"116px\" } : { marginLeft: \"0%\", marginTop: \"-5px\", marginLeft: \"-6%\", width: \"44px\", height: \"44px\" }} className=\"grid-image\" src={`http://localhost:8000/storage/${arr.image}`} alt=\"error\" />\n\n                            <span id=\"admin\" style={(sortBy === true) ? {fontSize:\"17px\" , color: \"black\", marginLeft: \"35%\" ,transform: 'translateX(-50%)', marginTop: \"-9%\", width: \"15%\" } : { color: \"black\", marginTop: \"1%\", width: \"15%\" }} >{arr.firstname}</span><span id=\"admin\" style={(sortBy === true) ? {fontSize:\"17px\" , color: \"black\", marginLeft: \"30%\" ,transform: 'translateX(-50%)', marginTop: \"-9%\", width: \"15%\" } : { color: \"black\", marginTop: \"1%\", width: \"15%\" }}>{arr.lastname}</span><span id=\"admin\" style={(sortBy === true) ? {fontSize:\"17px\" , color: \"black\", marginLeft: \"25%\",transform: 'translateX(-50%)', marginTop: \"-9%\", width: \"15%\" } : { color: \"black\", marginTop: \"1%\", width: \"15%\" }}>{arr.email}</span>\n                            <button className=\"Button\" id=\"delete-button\" onClick={() => { deleteItem(arr.id) }}>Delete</button>\n                            <div className=\"dropdown\">\n                                <button id=\"change2\" style={{ width: \"90%\", height: \"36px\" ,fontSize:\"14px\"}} className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Update<span className=\"caret\"></span></button>\n                                <ul className=\"dropdown-menu\">\n                                    {newfirstnameErr ? <div className=\"alert alert-danger\">{newfirstnameErr}</div> : \"\"}\n                                    <label>Firstname</label>\n                                    <input type=\"text\" placeholder=\"enter firstname\" onChange={(e) => { setNewfirstName(e.target.value); }} />\n                                    {newlastnameErr ? <div className=\"alert alert-danger\">{newlastnameErr}</div> : \"\"}\n                                    <label>Lastname</label>\n                                    <input type=\"text\" placeholder=\"enter lastname\" onChange={(e) => { setNewLastName(e.target.value); }} />\n                                    {newemailErr ? <div className=\"alert alert-danger\">{newemailErr}</div> : \"\"}\n                                    <label>Email</label>\n                                    <input type=\"text\" placeholder=\"enter email\" onChange={(e) => { setNewEmail(e.target.value); }} />\n                                    {newimageErr ? <div className=\"alert alert-danger\">{newimageErr}</div> : \"\"}<br></br>\n                                    <label>Image\n                                    <input className=\"form-control\" type=\"file\" name=\"image\" id=\"image\" placeholder=\"Enter your Address\" onChange={(e) => { setNewImage(e.target.files[0]); console.log(e.target.files[0]) }} /></label>\n                                    <button style={{ width: \"70%\", height: \"40px\" }} id=\"change1\" className=\"Button\" onClick={() => { updateInfo(arr.id) }}>Edit</button>\n                                </ul>\n                            </div>\n\n                        </div>\n                    }))}\n                </div>\n                <div className=\"container mt-5\">\n                    <Pagination\n                        paginate={paginate}\n                        postsPerPage={postsPerPage}\n                        totalPosts={filteredData.length}\n                    />\n                </div>\n                <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                                <h4 className=\"modal-title\">Add an Admin to the list</h4>\n                            </div>\n                            <form encType=\"multipart/form-data\">\n                                <div className=\"modal-body\">\n                                    {infoErr ? <div className=\"alert alert-danger\">{infoErr}</div> : \"\"}\n                                    {success ? <div style={{ width: \"80%\", margin: \"0 auto\" }} className=\"alert alert-success\">{success}</div> : \"\"}\n                                    <label htmlFor=\"name\">First name:</label>\n                                    {firstnameErr ? <div className=\"alert alert-danger\">{firstnameErr}</div> : \"\"}\n                                    <input value={firstName} className=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Enter firstname\" onChange={(e) => { setFirstName(e.target.value); }} />\n                                    <label htmlFor=\"lastname\">Last name:</label>\n                                    {lastnameErr ? <div className=\"alert alert-danger\">{lastnameErr}</div> : \"\"}\n                                    <input value={lastName} className=\"form-control\" id=\"lastname\" type=\"Email\" placeholder=\"Enter lastname\" onChange={(e) => { setLastName(e.target.value); }} />\n                                    <label htmlFor=\"text\">Email</label>\n                                    {emailErr ? <div className=\"alert alert-danger\">{emailErr}</div> : \"\"}\n                                    <input value={email} className=\"form-control\" id=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={(e) => { setEmail(e.target.value); }} />\n                                    <label htmlFor=\"image\">Image</label>\n                                    {imageErr ? <div className=\"alert alert-danger\">{imageErr}</div> : \"\"}\n                                    <input className=\"form-control\" type=\"file\" name=\"image\" id=\"image\" onChange={(e) => { setImage(e.target.files[0]); console.log(e.target.files[0]) }} />\n                                    <label htmlFor=\"username\">Username:</label>\n                                    {usernameErr ? <div className=\"alert alert-danger\">{usernameErr}</div> : \"\"}\n                                    <input value={userName} className=\"form-control\" id=\"username\" type=\"text\" placeholder=\"Enter username\" onChange={(e) => { setUserName(e.target.value); }} />\n                                    <label htmlFor=\"password\">Password:</label>\n                                    {passErr ? <div className=\"alert alert-danger\">{passErr}</div> : \"\"}\n                                    <input value={password} className=\"form-control\" id=\"password\" type=\"password\" placeholder=\"Enter password\" onChange={(e) => { setPassword(e.target.value); }} />\n                                    <div className=\"progessBar\" style={{ width: progress }}>\n                                        {progress}\n                                    </div>\n                                    <button id=\"add-button\" style={{ marginTop: \"3%\", backgroundColor: \"#400f35\", border: \"transparent none\" }} className=\"btn btn-primary btn-lg btn-block\" onClick={handleAdd}>Submit</button>\n                                </div>\n                            </form>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Admins;\n","/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Teams.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Projects.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Reports.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Employees.js",[],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Modal.js",["58"],"/home/tonyhaddad/Desktop/SecondProject/frontend/src/Components/Pagination.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":61,"column":11,"nodeType":"65","messageId":"66","endLine":71,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":41,"column":26,"nodeType":"69","messageId":"70","endLine":41,"endColumn":41},{"ruleId":"71","severity":1,"message":"72","line":319,"column":157,"nodeType":"73","messageId":"74","endLine":319,"endColumn":167},{"ruleId":"67","severity":1,"message":"75","line":17,"column":12,"nodeType":"69","messageId":"70","endLine":17,"endColumn":25},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'setPostsPerPage' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","'successUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]